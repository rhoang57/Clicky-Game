{"version":3,"sources":["components/ImageCard/index.js","components/Wrapper/index.js","components/NavBar/index.js","App.js","index.js"],"names":["ImageCard","props","react_default","a","createElement","className","onClick","clickedImage","id","alt","name","src","image","Wrapper","children","NavBar","currentscore","highscore","message","shuffle","arr","i","length","j","Math","floor","random","_ref","App","state","numbers","lossstate","winstate","clicked","_this","setState","indexOf","push","console","log","adjustScore","shuffleImages","_this2","this","components_Wrapper","components_NavBar","style","opacity","map","number","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5de33784.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst ImageCard = props => (\n    <div className=\"col-sm-4 col-md-3 card\" onClick = {() => props.clickedImage(props.id)}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n\nexport default ImageCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-primary\">\r\n            <span className=\"navbar-brand\">Clicky Game</span>\r\n            <div className=\"scoring\">\r\n                <h3 className=\"scores\">Current Score: {props.currentscore}</h3>\r\n                <h3 className=\"highscore\">High Score: {props.highscore}</h3>\r\n                <h5 className=\"message\">{props.message}</h5>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport NavBar from \"./components/NavBar\"\nimport numbers from \"./numbers.json\";\n\n// shuffle cards after each click using Fisher-Yates Shuffing Algorithm\nfunction shuffle(arr) {\n  for (let i = arr.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  }\n  return arr;\n}\n\nclass App extends Component {\n\n   // Setting this.state.friends to the friends json array\n   state = {\n    numbers,\n    currentscore: 0,\n    highscore: 0,\n    lossstate: 0,\n    winstate: 0,\n    clicked: [],\n  };\n  \n  clickedImage = id => {\n  //Assigning the state of the empty array being updated for clicked images\n  let clicked = this.state.clicked;\n  let currentscore = this.state.currentscore;\n  let highscore = this.state.highscore;\n  this.setState({\n    lossstate: 0\n  });\n\n  if (currentscore >= highscore) {\n    this.setState(\n      {highscore: currentscore}\n      );\n  }\n\n  if (clicked.indexOf(id) === -1) {\n    clicked.push(id);\n    console.log(clicked);\n    //Increment scores appropriately\n    this.adjustScore();\n    this.shuffleImages();\n  } else if (this.state.currentscore === 12) {\n    //Alert the player that they have won and reset currentscore and empty array of clicked images\n    this.setState({\n      winstate: 1,\n      currentscore: 0,\n      clicked:[]\n    });\n  } else {\n    //Alert the player that they have lost\n    this.setState({\n      currentscore: 0,\n      clicked: []\n    });\n    console.log(\"clicked an image twice within a round!\");\n    this.setState({\n      lossstate: 1\n    });\n  }\n\n};\n\nadjustScore = () => {\n  this.setState({ currentscore: this.state.currentscore + 1});\n};\n\nshuffleImages = () => {\n  this.setState({ numbers: shuffle(numbers) });\n};\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <NavBar\n        currentscore={this.state.currentscore} \n        highscore={this.state.highscore} />\n        \n        <div className=\"container\">\n        <div\n          className=\"alert alert-danger\"\n          style={{ opacity: this.state.lossstate }}\n        >\n          Sorry, you've clicked that image already. Please try again!\n          </div>\n        <div\n          className=\"alert alert-success\"\n          style={{ opacity: this.state.winstate }}\n        >\n          Congratulations! You clicked through all 12 images without double-clicking!\n          </div>\n\n        <div className=\"row\">\n        {this.state.numbers.map(number => (\n          <ImageCard\n            id={number.id}\n            key={number.id}\n            name={number.name}\n            image={number.image}\n            clickedImage={this.clickedImage}\n          />\n        ))}\n        </div>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}